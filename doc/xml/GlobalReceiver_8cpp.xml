<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="GlobalReceiver_8cpp" kind="file">
    <compoundname>GlobalReceiver.cpp</compoundname>
    <includes refid="GlobalReceiver_8h" local="yes">GlobalReceiver.h</includes>
    <incdepgraph>
      <node id="186">
        <label>stdarg.h</label>
      </node>
      <node id="187">
        <label>WString.h</label>
      </node>
      <node id="193">
        <label>iterator</label>
      </node>
      <node id="190">
        <label>stdint.h</label>
      </node>
      <node id="184">
        <label>AbstractCommunication.h</label>
        <link refid="AbstractCommunication_8h"/>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>map</label>
      </node>
      <node id="182">
        <label>GlobalReceiver.cpp</label>
        <link refid="GlobalReceiver.cpp"/>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>TCProcessor.h</label>
        <link refid="TCProcessor_8h"/>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>Arduino.h</label>
      </node>
      <node id="183">
        <label>GlobalReceiver.h</label>
        <link refid="GlobalReceiver_8h"/>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>stdio.h</label>
      </node>
      <node id="189">
        <label>AbstractTC.h</label>
        <link refid="AbstractTC_8h"/>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>LogicTC.h</label>
        <link refid="LogicTC_8h"/>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceProcessors">Processors</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>GlobalReceiver.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Jul<sp/>21,<sp/>2013</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>chris</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="GlobalReceiver_8h" kindref="compound">GlobalReceiver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespaceProcessors" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Processors<sp/>{</highlight></codeline>
<codeline lineno="10" refid="classProcessors_1_1GlobalReceiver_1a274744234e4f57be3667afa6964e48ac" refkind="member"><highlight class="normal"><ref refid="classProcessors_1_1GlobalReceiver_1a274744234e4f57be3667afa6964e48ac" kindref="member">GlobalReceiver::GlobalReceiver</ref>()<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classProcessors_1_1GlobalReceiver_1acca0f803f6361a4c7532dde4c932a2f8" kindref="member">_com</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classProcessors_1_1GlobalReceiver_1a8b7dbbea33145aeffe43789852cb5517" kindref="member">_tcProcessor</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="namespaceProcessors_1a44188b163f0de25011f4a51a920fbdf3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceProcessors_1a44188b163f0de25011f4a51a920fbdf3" kindref="member">byte_to_binary</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>b[9];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>b[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z<sp/>=<sp/>128;<sp/>z<sp/>&gt;<sp/>0;<sp/>z<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/>((x<sp/>&amp;<sp/>z)<sp/>==<sp/>z)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(b);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classProcessors_1_1GlobalReceiver_1a0f3f336ac7a9c7d2024490961694248c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classProcessors_1_1GlobalReceiver_1a0f3f336ac7a9c7d2024490961694248c" kindref="member" tooltip="This function fetches and processes the input. It calls com&amp;#39;s recv() to read the latest information...">GlobalReceiver::process</ref>()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>input<sp/>=<sp/><ref refid="classProcessors_1_1GlobalReceiver_1acca0f803f6361a4c7532dde4c932a2f8" kindref="member">_com</ref>-&gt;<ref refid="classCommunicators_1_1AbstractCommunication_1a5707e7e996f07104e0717d6fc53d7f4f" kindref="member" tooltip="This function reads data from the pipe and returns this as a string.">recv</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(input.length()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>action<sp/>=<sp/>input.c_str()[0];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(action)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classProcessors_1_1GlobalReceiver_1acca0f803f6361a4c7532dde4c932a2f8" kindref="member">_com</ref>-&gt;<ref refid="classCommunicators_1_1AbstractCommunication_1a415f90f6a4e815649806aedbb6ff5e3f" kindref="member" tooltip="This function sends a formatted string through the communication pipe.">sendf</ref>(</highlight><highlight class="stringliteral">&quot;CMD<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>input.c_str());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classProcessors_1_1GlobalReceiver_1a8b7dbbea33145aeffe43789852cb5517" kindref="member">_tcProcessor</ref>-&gt;<ref refid="classProcessors_1_1TCProcessor_1a0ac3bca062aa5da326df5ac1949324e0" kindref="member" tooltip="This function processes the input string which contains the OPCODE to concerned along with the action...">processRecv</ref>(input.substring(1));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classProcessors_1_1GlobalReceiver_1acca0f803f6361a4c7532dde4c932a2f8" kindref="member">_com</ref>-&gt;<ref refid="classCommunicators_1_1AbstractCommunication_1a415f90f6a4e815649806aedbb6ff5e3f" kindref="member" tooltip="This function sends a formatted string through the communication pipe.">sendf</ref>(</highlight><highlight class="stringliteral">&quot;Procedure<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>input.c_str());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classProcessors_1_1GlobalReceiver_1acca0f803f6361a4c7532dde4c932a2f8" kindref="member">_com</ref>-&gt;<ref refid="classCommunicators_1_1AbstractCommunication_1a415f90f6a4e815649806aedbb6ff5e3f" kindref="member" tooltip="This function sends a formatted string through the communication pipe.">sendf</ref>(</highlight><highlight class="stringliteral">&quot;Dwell<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>input.c_str());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classProcessors_1_1GlobalReceiver_1acca0f803f6361a4c7532dde4c932a2f8" kindref="member">_com</ref>-&gt;<ref refid="classCommunicators_1_1AbstractCommunication_1a415f90f6a4e815649806aedbb6ff5e3f" kindref="member" tooltip="This function sends a formatted string through the communication pipe.">sendf</ref>(</highlight><highlight class="stringliteral">&quot;Meta<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>input.c_str());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classProcessors_1_1GlobalReceiver_1acca0f803f6361a4c7532dde4c932a2f8" kindref="member">_com</ref>-&gt;<ref refid="classCommunicators_1_1AbstractCommunication_1a415f90f6a4e815649806aedbb6ff5e3f" kindref="member" tooltip="This function sends a formatted string through the communication pipe.">sendf</ref>(</highlight><highlight class="stringliteral">&quot;???<sp/>&apos;%s&apos;<sp/>|<sp/>%s<sp/>b<sp/>|<sp/>a:<sp/>%s<sp/>b&quot;</highlight><highlight class="normal">,<sp/>input.c_str(),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceProcessors_1a44188b163f0de25011f4a51a920fbdf3" kindref="member">byte_to_binary</ref>(input.toInt()),<sp/><ref refid="namespaceProcessors_1a44188b163f0de25011f4a51a920fbdf3" kindref="member">byte_to_binary</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>action));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classProcessors_1_1GlobalReceiver_1aed8991f2b69c3df04c1a1c0f15fb7b3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classProcessors_1_1GlobalReceiver_1aed8991f2b69c3df04c1a1c0f15fb7b3c" kindref="member" tooltip="This function sets the communication pointer. This is used when the empty constructor is used...">GlobalReceiver::setCom</ref>(<ref refid="classCommunicators_1_1AbstractCommunication" kindref="compound" tooltip="This class defines how all communication should be done.">Communicators::AbstractCommunication</ref><sp/>&amp;comInstance)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classProcessors_1_1GlobalReceiver_1acca0f803f6361a4c7532dde4c932a2f8" kindref="member">_com</ref><sp/>=<sp/>&amp;comInstance;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classProcessors_1_1GlobalReceiver_1a41eab6e4412e6bfbab06100adf8d121c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classProcessors_1_1GlobalReceiver_1a41eab6e4412e6bfbab06100adf8d121c" kindref="member" tooltip="This function sets the TC processor. This is used when the empty constructor is used.">GlobalReceiver::setTCProcessor</ref>(<ref refid="classProcessors_1_1TCProcessor" kindref="compound" tooltip="This class manages all the telecommands in a std::map . It is also called by GlobalReceiver upon rece...">TCProcessor</ref>&amp;<sp/>tcProcInstance)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classProcessors_1_1GlobalReceiver_1a8b7dbbea33145aeffe43789852cb5517" kindref="member">_tcProcessor</ref><sp/>=<sp/>&amp;tcProcInstance;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classProcessors_1_1GlobalReceiver_1a3b2be5ca78b8d0b817223724ac1186fd" refkind="member"><highlight class="normal"><ref refid="classProcessors_1_1GlobalReceiver_1a3b2be5ca78b8d0b817223724ac1186fd" kindref="member">GlobalReceiver::~GlobalReceiver</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/chris/Workspace/PlusPonics/code/Embedded_SW/GlobalReceiver.cpp"/>
  </compounddef>
</doxygen>
