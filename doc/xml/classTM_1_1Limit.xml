<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="classTM_1_1Limit" kind="class" prot="public">
    <compoundname>TM::Limit</compoundname>
    <includes refid="Limit_8h" local="no">Limit.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4d" prot="public" static="no">
        <name>LIMIT_TYPE</name>
        <enumvalue id="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4da8bc898774ed16cfb5842ff2b0a46dbb8" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>this is only used for initialization of the empty constructor. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4dad69f854f6a695a64100da5c64b2da1f5" prot="public">
          <name>HIGH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>this defines a high limit, such as red high or yellow high. It will check that the provided value is less than the limit. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4da75d73bc4c0cad1343a514f0b34702323" prot="public">
          <name>LOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>this defines a low limit, such as red low or yellow low. It will check that the provided value is greater than the limit. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>defines if this limit is a HIGH limit or a LOW limit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" line="26" bodyfile="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" bodystart="26" bodyend="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classTM_1_1Limit_1a9da17b7873c9f7219f7192d443e983dd" prot="private" static="no" mutable="no">
        <type><ref refid="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4d" kindref="member">LIMIT_TYPE</ref></type>
        <definition>LIMIT_TYPE TM::Limit::_type</definition>
        <argsstring></argsstring>
        <name>_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" line="52" bodyfile="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" bodystart="52" bodyend="-1"/>
        <referencedby refid="classTM_1_1Limit_1a4e2e9352a5735e47766cd58b86fff15e" compoundref="Limit_8cpp" startline="30" endline="39">check_limit</referencedby>
        <referencedby refid="classTM_1_1Limit_1ab357caca9f01cf82f551b80987ce2a96" compoundref="Limit_8cpp" startline="12" endline="17">Limit</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classTM_1_1Limit_1ab2c1b9a164ef1e767f8222b0d3cb30dc" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t TM::Limit::_opcode</definition>
        <argsstring></argsstring>
        <name>_opcode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" line="53" bodyfile="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" bodystart="53" bodyend="-1"/>
        <referencedby refid="classTM_1_1Limit_1a4e2e9352a5735e47766cd58b86fff15e" compoundref="Limit_8cpp" startline="30" endline="39">check_limit</referencedby>
        <referencedby refid="classTM_1_1Limit_1ab357caca9f01cf82f551b80987ce2a96" compoundref="Limit_8cpp" startline="12" endline="17">Limit</referencedby>
        <referencedby refid="classTM_1_1Limit_1aa4dc6a0e5d0aaa4104eaef4082ef086e" compoundref="Limit_8cpp" startline="22" endline="24">set_opcode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classTM_1_1Limit_1ae6fbd6e7551c3a9e4a0e883d4cd5c4e8" prot="private" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t TM::Limit::_limit</definition>
        <argsstring></argsstring>
        <name>_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" line="54" bodyfile="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" bodystart="54" bodyend="-1"/>
        <referencedby refid="classTM_1_1Limit_1a4e2e9352a5735e47766cd58b86fff15e" compoundref="Limit_8cpp" startline="30" endline="39">check_limit</referencedby>
        <referencedby refid="classTM_1_1Limit_1ab357caca9f01cf82f551b80987ce2a96" compoundref="Limit_8cpp" startline="12" endline="17">Limit</referencedby>
        <referencedby refid="classTM_1_1Limit_1aa459ceba6f3ca0a00ba795c7f903a951" compoundref="Limit_8cpp" startline="26" endline="28">set_limit</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classTM_1_1Limit_1ab357caca9f01cf82f551b80987ce2a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TM::Limit::Limit</definition>
        <argsstring>()</argsstring>
        <name>Limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" line="21" bodyfile="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.cpp" bodystart="12" bodyend="17"/>
        <references refid="classTM_1_1Limit_1ae6fbd6e7551c3a9e4a0e883d4cd5c4e8" compoundref="Limit_8h" startline="54">_limit</references>
        <references refid="classTM_1_1Limit_1ab2c1b9a164ef1e767f8222b0d3cb30dc" compoundref="Limit_8h" startline="53">_opcode</references>
        <references refid="classTM_1_1Limit_1a9da17b7873c9f7219f7192d443e983dd" compoundref="Limit_8h" startline="52">_type</references>
        <references refid="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4da8bc898774ed16cfb5842ff2b0a46dbb8" compoundref="Limit_8h" startline="27">NONE</references>
      </memberdef>
      <memberdef kind="function" id="classTM_1_1Limit_1a482964c90dd50067d080e88ad0b7126d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>TM::Limit::~Limit</definition>
        <argsstring>()</argsstring>
        <name>~Limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" line="22" bodyfile="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.cpp" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classTM_1_1Limit_1aa4dc6a0e5d0aaa4104eaef4082ef086e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TM::Limit::set_opcode</definition>
        <argsstring>(uint8_t opc)</argsstring>
        <name>set_opcode</name>
        <param>
          <type>uint8_t</type>
          <declname>opc</declname>
        </param>
        <briefdescription>
<para>This function will set the opcode to execute if there is an out of limit. This function should only be called once, right after initialization, but no mechanism prevent it from being called more than once. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>opc</parametername>
</parameternamelist>
<parameterdescription>
<para>op_code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" line="36" bodyfile="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.cpp" bodystart="22" bodyend="24"/>
        <references refid="classTM_1_1Limit_1ab2c1b9a164ef1e767f8222b0d3cb30dc" compoundref="Limit_8h" startline="53">_opcode</references>
      </memberdef>
      <memberdef kind="function" id="classTM_1_1Limit_1aa459ceba6f3ca0a00ba795c7f903a951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TM::Limit::set_limit</definition>
        <argsstring>(int32_t lim)</argsstring>
        <name>set_limit</name>
        <param>
          <type>int32_t</type>
          <declname>lim</declname>
        </param>
        <briefdescription>
<para>This function sets the limit of the instance. This function should only be called once, right after initialization, but no mechanism prevent it from being called more than once. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lim</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" line="43" bodyfile="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.cpp" bodystart="26" bodyend="28"/>
        <references refid="classTM_1_1Limit_1ae6fbd6e7551c3a9e4a0e883d4cd5c4e8" compoundref="Limit_8h" startline="54">_limit</references>
      </memberdef>
      <memberdef kind="function" id="classTM_1_1Limit_1a4e2e9352a5735e47766cd58b86fff15e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t TM::Limit::check_limit</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>check_limit</name>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>This function will check if the current value provided is within the limits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be checked against. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if there is no OOL (since 0 is an invalid OPCODE) or the OPCODE to execute. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" line="50" bodyfile="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.cpp" bodystart="30" bodyend="39"/>
        <references refid="classTM_1_1Limit_1ae6fbd6e7551c3a9e4a0e883d4cd5c4e8" compoundref="Limit_8h" startline="54">_limit</references>
        <references refid="classTM_1_1Limit_1ab2c1b9a164ef1e767f8222b0d3cb30dc" compoundref="Limit_8h" startline="53">_opcode</references>
        <references refid="classTM_1_1Limit_1a9da17b7873c9f7219f7192d443e983dd" compoundref="Limit_8h" startline="52">_type</references>
        <references refid="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4dad69f854f6a695a64100da5c64b2da1f5" compoundref="Limit_8h" startline="28">HIGH</references>
        <references refid="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4da75d73bc4c0cad1343a514f0b34702323" compoundref="Limit_8h" startline="29">LOW</references>
        <references refid="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4da8bc898774ed16cfb5842ff2b0a46dbb8" compoundref="Limit_8h" startline="27">NONE</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class defines how a limit is to operate. This is used by any telemetry point which defines limits. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" line="19" bodyfile="/home/chris/Workspace/PlusPonics/code/Embedded_SW/Limit.h" bodystart="19" bodyend="55"/>
    <listofallmembers>
      <member refid="classTM_1_1Limit_1ae6fbd6e7551c3a9e4a0e883d4cd5c4e8" prot="private" virt="non-virtual"><scope>TM::Limit</scope><name>_limit</name></member>
      <member refid="classTM_1_1Limit_1ab2c1b9a164ef1e767f8222b0d3cb30dc" prot="private" virt="non-virtual"><scope>TM::Limit</scope><name>_opcode</name></member>
      <member refid="classTM_1_1Limit_1a9da17b7873c9f7219f7192d443e983dd" prot="private" virt="non-virtual"><scope>TM::Limit</scope><name>_type</name></member>
      <member refid="classTM_1_1Limit_1a4e2e9352a5735e47766cd58b86fff15e" prot="public" virt="non-virtual"><scope>TM::Limit</scope><name>check_limit</name></member>
      <member refid="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4dad69f854f6a695a64100da5c64b2da1f5" prot="public" virt="non-virtual"><scope>TM::Limit</scope><name>HIGH</name></member>
      <member refid="classTM_1_1Limit_1ab357caca9f01cf82f551b80987ce2a96" prot="public" virt="non-virtual"><scope>TM::Limit</scope><name>Limit</name></member>
      <member refid="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4d" prot="public" virt="non-virtual"><scope>TM::Limit</scope><name>LIMIT_TYPE</name></member>
      <member refid="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4da75d73bc4c0cad1343a514f0b34702323" prot="public" virt="non-virtual"><scope>TM::Limit</scope><name>LOW</name></member>
      <member refid="classTM_1_1Limit_1aac04737f68ccf3884b4c2a773fb39d4da8bc898774ed16cfb5842ff2b0a46dbb8" prot="public" virt="non-virtual"><scope>TM::Limit</scope><name>NONE</name></member>
      <member refid="classTM_1_1Limit_1aa459ceba6f3ca0a00ba795c7f903a951" prot="public" virt="non-virtual"><scope>TM::Limit</scope><name>set_limit</name></member>
      <member refid="classTM_1_1Limit_1aa4dc6a0e5d0aaa4104eaef4082ef086e" prot="public" virt="non-virtual"><scope>TM::Limit</scope><name>set_opcode</name></member>
      <member refid="classTM_1_1Limit_1a482964c90dd50067d080e88ad0b7126d" prot="public" virt="virtual"><scope>TM::Limit</scope><name>~Limit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
