<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="GlobalReceiver_8h" kind="file">
    <compoundname>GlobalReceiver.h</compoundname>
    <includes refid="AbstractCommunication_8h" local="yes">AbstractCommunication.h</includes>
    <includes refid="TCProcessor_8h" local="yes">TCProcessor.h</includes>
    <includedby refid="GlobalReceiver_8cpp" local="yes">GlobalReceiver.cpp</includedby>
    <includedby refid="main_8cpp" local="yes">main.cpp</includedby>
    <incdepgraph>
      <node id="199">
        <label>stdarg.h</label>
      </node>
      <node id="200">
        <label>WString.h</label>
      </node>
      <node id="206">
        <label>iterator</label>
      </node>
      <node id="203">
        <label>stdint.h</label>
      </node>
      <node id="197">
        <label>AbstractCommunication.h</label>
        <link refid="AbstractCommunication_8h"/>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>map</label>
      </node>
      <node id="201">
        <label>TCProcessor.h</label>
        <link refid="TCProcessor_8h"/>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>Arduino.h</label>
      </node>
      <node id="196">
        <label>GlobalReceiver.h</label>
        <link refid="GlobalReceiver.h"/>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
      </node>
      <node id="198">
        <label>stdio.h</label>
      </node>
      <node id="202">
        <label>AbstractTC.h</label>
        <link refid="AbstractTC_8h"/>
        <childnode refid="203" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>LogicTC.h</label>
        <link refid="LogicTC_8h"/>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="209">
        <label>GlobalReceiver.cpp</label>
        <link refid="GlobalReceiver_8cpp"/>
      </node>
      <node id="208">
        <label>GlobalReceiver.h</label>
        <link refid="GlobalReceiver.h"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="210">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classProcessors_1_1GlobalReceiver" prot="public">Processors::GlobalReceiver</innerclass>
    <innernamespace refid="namespaceProcessors">Processors</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>GlobalReceiver.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Jul<sp/>21,<sp/>2013</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>chris</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RECVPROCESSOR_H_</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>RECVPROCESSOR_H_</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AbstractCommunication_8h" kindref="compound">AbstractCommunication.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TCProcessor_8h" kindref="compound">TCProcessor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Processors<sp/>{</highlight></codeline>
<codeline lineno="25" refid="classProcessors_1_1GlobalReceiver" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classProcessors_1_1GlobalReceiver" kindref="compound" tooltip="This class is the overall handler for receiving input over whichever means of Communicators::Abstract...">GlobalReceiver</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classProcessors_1_1GlobalReceiver_1a274744234e4f57be3667afa6964e48ac" kindref="member">GlobalReceiver</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classProcessors_1_1GlobalReceiver_1a0f3f336ac7a9c7d2024490961694248c" kindref="member" tooltip="This function fetches and processes the input. It calls com&amp;#39;s recv() to read the latest information...">process</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classProcessors_1_1GlobalReceiver_1aed8991f2b69c3df04c1a1c0f15fb7b3c" kindref="member" tooltip="This function sets the communication pointer. This is used when the empty constructor is used...">setCom</ref>(<ref refid="classCommunicators_1_1AbstractCommunication" kindref="compound" tooltip="This class defines how all communication should be done.">Communicators::AbstractCommunication</ref><sp/>&amp;comInstance);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classProcessors_1_1GlobalReceiver_1a41eab6e4412e6bfbab06100adf8d121c" kindref="member" tooltip="This function sets the TC processor. This is used when the empty constructor is used.">setTCProcessor</ref>(<ref refid="classProcessors_1_1TCProcessor" kindref="compound" tooltip="This class manages all the telecommands in a std::map . It is also called by GlobalReceiver upon rece...">TCProcessor</ref><sp/>&amp;tcProcInstance);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classProcessors_1_1GlobalReceiver_1a3b2be5ca78b8d0b817223724ac1186fd" kindref="member">~GlobalReceiver</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classProcessors_1_1GlobalReceiver_1acca0f803f6361a4c7532dde4c932a2f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCommunicators_1_1AbstractCommunication" kindref="compound" tooltip="This class defines how all communication should be done.">Communicators::AbstractCommunication</ref><sp/>*<ref refid="classProcessors_1_1GlobalReceiver_1acca0f803f6361a4c7532dde4c932a2f8" kindref="member">_com</ref>;</highlight></codeline>
<codeline lineno="60" refid="classProcessors_1_1GlobalReceiver_1a8b7dbbea33145aeffe43789852cb5517" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classProcessors_1_1TCProcessor" kindref="compound" tooltip="This class manages all the telecommands in a std::map . It is also called by GlobalReceiver upon rece...">TCProcessor</ref><sp/>*<ref refid="classProcessors_1_1GlobalReceiver_1a8b7dbbea33145aeffe43789852cb5517" kindref="member">_tcProcessor</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>RECVPROCESSOR_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/chris/Workspace/PlusPonics/code/Embedded_SW/GlobalReceiver.h"/>
  </compounddef>
</doxygen>
